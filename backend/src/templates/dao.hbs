// Generated DAO Code for {{id}}
use anchor_lang::prelude::*;
use spl_governance::instruction::create_realm;

pub fn process(ctx: Context<CreateDAO>) -> Result<()> {
    let create_realm_ix = create_realm(
        &ctx.accounts.governance_program.key(),
        &ctx.accounts.realm.key(),
        &ctx.accounts.payer.key(),
        Some(&ctx.accounts.council_mint.key()),
        "{{data.name}}",
        {{data.threshold}}, // Proposal threshold
    );

    invoke(
        &create_realm_ix,
        &[
            ctx.accounts.realm.to_account_info(),
            ctx.accounts.payer.to_account_info(),
            ctx.accounts.council_mint.to_account_info(),
            ctx.accounts.system_program.to_account_info(),
        ],
    )?;

    msg!("Created DAO: {{data.name}}");
    Ok(())
}

#[derive(Accounts)]
pub struct CreateDAO<'info> {
    #[account(
        init,
        payer = payer,
        space = 8 + 32 + 8 + 32,
        seeds = [b"dao", b"{{data.name}}".as_ref()],
        bump
    )]
    pub realm: Account<'info, Realm>,
    #[account(mut)]
    pub payer: Signer<'info>,
    pub council_mint: Account<'info, Mint>,
    pub governance_program: Program<'info, Governance>,
    pub system_program: Program<'info, System>,
}
